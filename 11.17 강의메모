pdf 39page
Pointers

& 와 * : 앰퍼샌드와 아스테리스크 의 차이를 알아야 한다
----------------------------------------------------

pdf 40 page
Pointer Array
~$ vi PointerArray.cpp
내용참조
#include <iostream>
using namespace std;
#define MAX 3                                               // 아래 데이터 개수가 3이라서 3을 붙인거구 MAX의 값이 3이라는 의미
                                                            // 이러한 식으로 기호상수로 정의하면 제일 처음에 명시해놓기 때문에 가독성이 좋아지며 수정하려 할때 제일 위 한줄만 수정하면 되어 수정이 쉬워진다
int main () {

----------------------------------------------------

pdf 41page
Multi-dimensional Arrays
행렬 만드는 내용

ex)
Enter Row and Column: 5
5
Matrix Size : 25
ptr_matrix[0][0]: 
ptr_matrix[0][1]: 
ptr_matrix[0][2]: 
ptr_matrix[0][3]: 
ptr_matrix[0][4]: 
ptr_matrix[1][0]: 
ptr_matrix[1][1]: 
ptr_matrix[1][2]: 
ptr_matrix[1][3]: 
ptr_matrix[1][4]: 
ptr_matrix[2][0]: 
ptr_matrix[2][1]: 
ptr_matrix[2][2]: 
ptr_matrix[2][3]: 
ptr_matrix[2][4]: 
ptr_matrix[3][0]: 
ptr_matrix[3][1]: 
ptr_matrix[3][2]: 
ptr_matrix[3][3]: 
ptr_matrix[3][4]: 
ptr_matrix[4][0]: 
ptr_matrix[4][1]: 
ptr_matrix[4][2]: 
ptr_matrix[4][3]: 
ptr_matrix[4][4]:

----------------------------------------------------

pdf 43 page
Try - Multi-dimensional Arrays

#include <iostream>
#include <cstring>
using namespace std;

코드 내용

#include <iostream>
#include <cstring>
using namespace std;

int main()
{
    int row, column;
    char char_row = '~', char_column = '!';
    cout << "Enter Row and Column: ";
    cin >> row >> column;
    cout << "Display Row and Column" << char_row << ", " << char_column << endl;
    char **map = new char *[row]; // Dynamic Allocation
    for (int i = 0; i < row; i++)
        map[i] = new char[column];
    
    // 처음 맵의 값을 정해준다.
    for (int i = 0; i < row; i++){ // output each array element's value
        for (int j = 0; j < column; j++)
        {
            map[i][j] = char_row;
        }
    } // end for

    map[1][1] = ' ';
    map[1][3] = ' ';
    map[2][1] = ' ';
    map[2][3] = ' ';
    map[3][1] = ' ';
    map[3][3] = ' ';
    map[4][1] = ' ';
    map[4][3] = ' ';
    map[5][1] = ' ';
    map[5][3] = ' ';

    map[1][2] = '!';
    map[2][2] = '!';
    map[3][2] = '!';
    map[4][2] = '!';
    map[5][2] = '!';

    // display
    for (int i = 0; i < row; i++){ // output each array element's value
        for (int j = 0; j < column; j++)
        {
            cout << map[i][j];
        }
        cout << endl;
    }
    delete[] map;
    return 0;
}
결과

Enter Row and Column: 7 5
Display Row and Column~, !
~~~~~
~ ! ~
~ ! ~
~ ! ~
~ ! ~
~ ! ~
~~~~~

* 어려워서 강사님이 요구한 내용은 하지못했음. 시행착오중 *
* 두번째 시도. 내용은 출력했으나 for문을 만들지 못함*

----------------------------------------------------

pdf 46 page
Random Numbers

코드내용

#include <iostream>
#include <random>
using namespace std;

int main(){
random_device rd;                                                                       // 랜덤 함수 선언
mt19937_64 mersenne_twister_engine(rd()); // create a mersenne theory
uniform_int_distribution<> dice(1, 12);                                                 // 주사위 1부터 12까지

for(int count=1; count<=10; ++count){                                                   // for문
cout << "random dice : " << dice(mersenne_twister_engine) << endl;                      // 함수 출력
}
}

----------------------------------------------------



vi ./DecisionSwitch.cpp

#include <iostream>
#include <cstring>
using namespace std;

int main(){
    char grade = 'D';
    switch (grade) {
        case 'B':
        case 'C': cout << "Well done" << endl;
        break;
        default:
        cout << "Invalid grade" << endl;
    }
    return 0;
}

* 여기까지 한게 17시 20분경, 다음부터 게임 만드는 프로젝트 설명하신다고 말씀하심.*
* 강의 내용을 응용해서 게임 프로젝트 만들어야함.*

----------------------------------------------------

CPP_app.pdf 
1page

먼저 터미널창에서 설치
sudo apt-get update
sudo apt-get install libncurses5-dev libncursesw5-dev


#include <curses.h>

int main() {
initscr();
int max_y, max_x; // start main
// getmaxyx(stdscr,max_y,max_x);
printw("Hello Ncurse!");
refresh(); // end main
getch();
endwin();
return 0;
}

터미널창에서 해야됨
~$ c++ helloworldwithcurses.cpp -l curses       // 외부 라이브러리 실행파일
~$ ./a.out                                      // 실행

